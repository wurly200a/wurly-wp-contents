#+BLOG: wurly-blog
#+POSTID: 1682
#+ORG2BLOG:
#+DATE: [2024-11-24 Sun 18:39]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil
#+CATEGORY: NuttX, ESP32
#+TAGS: 
#+DESCRIPTION:
#+TITLE: ESP32 x NuttXで SSD1306 を動かす

* はじめに

ESP32 x NuttXで何らかを作成する上で、LCDを使えるようにしたいと考えました。

Arduino又はArduino互換、ESP-IDFのcomponentsとして作成されたプロジェクトは、[[./?p=613][ESP32-DevKitC-32E で OLEDディスプレイ SSD1331 を使う (lcdgfxライブラリのdemoを動かす)]] のように、githubにいくつかあります。
同様に探してみたところ、そういったプロジェクトでNuttX向けのものは見つかりませんでした。

一方で、NuttXのドライバーやExampleアプリケーションとしていくつかLCDの対応は組み込まれており、これを Kconfig で有効にすれば使えそうであることがわかりました。

[[yt:TZ4i71ArtRo]]

上記動画を参考に、ILI9341 を使って軽く試したのですが、Exception が発生してしまったので、腰を据えて見ることにします。

 - [[https://qiita.com/yunkya2/items/fdc5d53b05e3cf5be290][NuttX for Raspberry Pi PicoでSSD1306 OLEDに画像表示 (I2C接続) #RaspberryPi - Qiita]]
https://qiita.com/yunkya2/items/fdc5d53b05e3cf5be290

上記も参考になりました。

* ハードウェア

秋月電子にて、1.と2.はを新たに購入しました。
3.と4.は以前Amazonで購入したものです。

ESP32-DevKitC-VEは、オンボードで FlashROM/PSRAM 共に8MB搭載しており、多くの用途に使用できそうです。
OLEDディスプレイは、制御チップSSD1306を使用しているものです。
より配線が少ない方がわかりやすいと考え、今回はSPIでなく、I2C のものを選びました。

 1. ESP32-DevKitC-VE ESP32-WROVER-E開発ボード 8MB/ESP32-DevKitC-VE ¥1,770
 2. 0.96インチ 128×64ドット有機ELディスプレイ(OLED) 白色/ ¥580
 3. サンハヤト SAD-101 ニューブレッドボード ¥529
 4. サンハヤト ジャンプワイヤキット SKS-100 単線タイプでよく使用する短めジャンプワイヤのセット品 ¥866

* 完成品(配線)

下記のように配線しました。ジャンプワイヤのみで配線することですっきりしています！

file:images/1682_01.jpg

ブレッドボードのGNDと電源ラインをGND/3.3Vを引き出し、LCDの下部分に隠れる形で、真ん中に配線をし逆側のLCDにGND/3.3Vを渡しています。
またこの向きであれば、ぎりぎり22,23pinがジャンプワイヤでSCK,SDAに届きました。

file:images/1682_02.jpg

* 作成したプロジェクト

動作したものをgithubに置きました。

NuttX(nuttx/nuttx-apps)は12.6を使用しています。

Exampleで nxdemo, nxhello, nxtext が実行できるようにしています。

 - [[https://github.com/wurly200a/ssd1306-on-nuttx-esp32][wurly200a/ssd1306-on-nuttx-esp32: Using LCD on NuttX]]
https://github.com/wurly200a/ssd1306-on-nuttx-esp32

前記の写真は nxhello を実行しているところです。

* コンフィギュレーション作業及びデバッグ

#+begin_src bash
nsh> nxhello
xtensa_user_panic: User Exception: EXCCAUSE=001c task: nxhello
_assert: Current Version: NuttX  12.6.0 7a865b2479-dirty Nov 24 2024 14:51:57 xtensa
_assert: Assertion failed user panic: at file: common/xtensa_assert.c:187 task: nxhello process: nxhello 0x400f7b44
up_dump_register:    PC: 400f5c35    PS: 00060230
up_dump_register:    A0: 800f4e4e    A1: 3f803650    A2: 3f803670    A3: 000000d0
up_dump_register:    A4: 00002000    A5: 400fff2c    A6: 3f8036b0    A7: 3ffcae28
up_dump_register:    A8: 400f5bcc    A9: 3f803650   A10: 3f802798   A11: 3f803670
up_dump_register:   A12: 3ffb103c   A13: 00000480   A14: 00000018   A15: 3ffcae28
up_dump_register:   SAR: 00000004 CAUSE: 0000001c VADDR: 000000fc
up_dump_register:  LBEG: 400014fd  LEND: 4000150d  LCNT: ffffffff
dump_stack: User Stack:
dump_stack:   base: 0x3f8027b8
dump_stack:   size: 00004056
dump_stack:     sp: 0x3f803650
stack_dump: 0x3f803630: 3ffcae74 00060622 3f803650 3ffcae28 80102ec6 3f803670 000000d0 3f402063
stack_dump: 0x3f803650: 00000fd8 3f802798 3f8027b8 0000006e 800f7b78 3f8036c0 3f402063 0000000c
stack_dump: 0x3f803670: 00000fd8 400f5c00 400f5bcc 00000000 00000000 00000000 00000000 00000000
stack_dump: 0x3f803690: 3f8036f0 3f8036d0 00000004 00000000 3f8036f0 3f8036d0 00000004 000000d0
stack_dump: 0x3f8036b0: 800d57a8 3f803710 00000001 3f8027a8 3f8036f0 3f8036d0 00000004 00000000
stack_dump: 0x3f8036d0: 00000000 0000000c 00060f20 3f800da0 3f800fa8 3f402030 00000001 3f8027a8
stack_dump: 0x3f8036f0: 00060f20 3f800da0 3f800fa8 3f402030 800d36ef 3f803750 400f7b44 00000001
stack_dump: 0x3f803710: 00000000 00000000 00000000 00000000 00000064 3f803770 00000000 00000000
stack_dump: 0x3f803730: 400d4194 3ffb0ec4 3ffcaee8 3ffb48f4 00000000 3f803770 00000000 00000000
stack_dump: 0x3f803750: 3f8027a8 3f405bac 3ffcaf40 3f405bac 00000000 00000000 00000000 00000000
stack_dump: 0x3f803770: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
stack_dump: 0x3f803790: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump_tasks:    PID GROUP PRI POLICY   TYPE    NPX STATE   EVENT      SIGMASK          STACKBASE  STACKSIZE   COMMAND
dump_tasks:   ----   --- --- -------- ------- --- ------- ---------- ---------------- 0x3ffbf510      2048   irq
dump_task:       0     0   0 FIFO     Kthread - Ready              0000000000000000 0x3ffbe920      3056   Idle_Task
dump_task:       1     0 100 RR       Kthread - Waiting Semaphore  0000000000000000 0x3ffae978      4024   lpwork 0x3ffb100c 0x3ffb1020
dump_task:       2     2 100 RR       Task    - Waiting Semaphore  0000000000000000 0x3f8003d0      3024   nsh_main
dump_task:       3     0 223 RR       Kthread - Waiting Semaphore  0000000000000000 0x3ffc2a00      2000   rt_timer
dump_task:       4     0 253 RR       Kthread - Waiting MQ empty   0000000000000000 0x3ffc38b8      6616   wifi
dump_task:       5     5 100 RR       Task    - Waiting Semaphore  0000000000000000 0x3f801598      4056   telnetd
dump_task:       6     6 100 RR       Task    - Running            0000000000000000 0x3f8027b8      4056   nxhello
dump_task:       7     0 110 RR       Kthread - Waiting Signal     0000000000000000 0x3ffcb3a8      8136   NX_Server 0 0
#+end_src

graphics/nxmu/nxmu_start.c の nx_server() 付近で飛んでいることがわかりました。

boards/xtensa/esp32/common/src/esp32_ssd1306.c

* おわりに

# images/1682_01.jpg https://blog.wurlyhub.com/wp-content/uploads/2024/11/1682_01-scaled.jpg
# images/1682_02.jpg https://blog.wurlyhub.com/wp-content/uploads/2024/11/1682_02-scaled.jpg
