#+BLOG: wurly-blog
#+POSTID: 563
#+ORG2BLOG:
#+DATE: [2023-08-06 Sun 11:13]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil
#+CATEGORY: Emacs
#+TAGS: 
#+DESCRIPTION:
#+TITLE: Ubuntu 22.04 (WSL) に Emacs 29.01 をインストール

* 概要

Emacs29(Emacs 29.1)がリリースされましたので、これをビルドしてインストールしたいと思います。

[[./?p=555][Ubuntu 22.04 (WSL) に Emacs 28.02 をインストール]] にて行った環境で実行していますので、必要なパッケージ等についてはそちらでインストールされている前提となります。

* 手順

#+begin_src 
$ git clone --depth 1 --branch emacs-29.1 git://git.savannah.gnu.org/emacs.git emacs-29.1
#+end_src

#+begin_src
# cd emacs-29.1
$ ./autogen.sh
$ CFLAGS='-I/usr/lib/gcc/x86_64-linux-gnu/10/include -L/usr/lib/gcc/x86_64-linux-gnu/10' ./configure --with-native-compilation --without-pop
#+end_src

#+begin_src 
Configured for 'x86_64-pc-linux-gnu'.

  Where should the build process find the source code?    .
  What compiler should emacs be built with?               gcc -I/usr/lib/gcc/x86_64-linux-gnu/10/include -L/usr/lib/gcc/x86_64-linux-gnu/10 -O
  Should Emacs use the GNU version of malloc?             no
    (The GNU allocators don't work with this system configuration.)
  Should Emacs use a relocating allocator for buffers?    no
  Should Emacs use mmap(2) for buffer allocation?         no
  What window system should Emacs use?                    x11
  What toolkit should Emacs use?                          GTK3
  Where do we find X Windows header files?                Standard dirs
  Where do we find X Windows libraries?                   Standard dirs
  Does Emacs use -lXaw3d?                                 no
  Does Emacs use -lXpm?                                   yes
  Does Emacs use -ljpeg?                                  yes
  Does Emacs use -ltiff?                                  yes
  Does Emacs use a gif library?                           yes -lgif
  Does Emacs use a png library?                           yes -lpng16 -lz
  Does Emacs use -lrsvg-2?                                yes
  Does Emacs use -lwebp?                                  no
  Does Emacs use -lsqlite3?                               no
  Does Emacs use cairo?                                   yes
  Does Emacs use -llcms2?                                 yes
  Does Emacs use imagemagick?                             no
  Does Emacs use native APIs for images?                  no
  Does Emacs support sound?                               yes
  Does Emacs use -lgpm?                                   yes
  Does Emacs use -ldbus?                                  yes
  Does Emacs use -lgconf?                                 no
  Does Emacs use GSettings?                               yes
  Does Emacs use a file notification library?             yes -lglibc (inotify)
  Does Emacs use access control lists?                    yes -lacl
  Does Emacs use -lselinux?                               yes
  Does Emacs use -lgnutls?                                yes
  Does Emacs use -lxml2?                                  yes
  Does Emacs use -lfreetype?                              yes
  Does Emacs use HarfBuzz?                                yes
  Does Emacs use -lm17n-flt?                              yes
  Does Emacs use -lotf?                                   yes
  Does Emacs use -lxft?                                   no
  Does Emacs use -lsystemd?                               yes
  Does Emacs use -ljansson?                               yes
  Does Emacs use -ltree-sitter?                           no
  Does Emacs use the GMP library?                         yes
  Does Emacs directly use zlib?                           yes
  Does Emacs have dynamic modules support?                yes
  Does Emacs use toolkit scroll bars?                     yes
  Does Emacs support Xwidgets?                            no
  Does Emacs have threading support in lisp?              yes
  Does Emacs support the portable dumper?                 yes
  Does Emacs support legacy unexec dumping?               no
  Which dumping strategy does Emacs use?                  pdumper
  Does Emacs have native lisp compiler?                   yes
  Does Emacs use version 2 of the X Input Extension?      yes
  Does Emacs generate a smaller-size Japanese dictionary? no
#+end_src

no となっているオプションのうち、気になるものを確認します。

#+begin_src 
  Does Emacs support Xwidgets?                            no
#+end_src

 - [[https://grugrut.hatenablog.jp/entry/2016/12/03/123128][Emacs25に導入されたXWidgetに関して理解を深める - ぐるっとぐりっど]]

上記を参照する限り、無くても問題なさそうです。

#+begin_src 
  Does Emacs generate a smaller-size Japanese dictionary? no
#+end_src

 - [[https://www.reddit.com/r/emacs/comments/124p6fp/build_does_emacs_generate_a_smallersize_japanese/][Build: "Does Emacs generate a smaller-size Japanese dictionary?" : r/emacs]]

こちらも、日本語を使う人はわざわざ設定する必要は無さそうです。

#+begin_src 
make
#+end_src

# make 11:45-11:57

make は私の環境(Core i5-1235U, 32GB Memory, SSD)で約12分かかりました。

#+begin_src 
sudo make install
#+end_src

* 起動後

#+begin_src 
⛔ Warning (initialization): An error occurred while loading ‘/home/wurly/.emacs.d/init.el’:

Symbol's function definition is void: set-face-underline-p
#+end_src

init.elの読み込み時に上記のエラーが出ましたので設定を削除しました。

#+begin_src 
⛔ Warning (comp): browse-kill-ring.el:291:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
⛔ Warning (comp): browse-kill-ring.el:301:14: Warning: Case 'insert will match ‘quote’.  If that’s intended, write (insert quote) instead.  Otherwise, don’t quote ‘insert’.
⛔ Warning (comp): browse-kill-ring.el:301:14: Warning: Case 'append will match ‘quote’.  If that’s intended, write (append quote) instead.  Otherwise, don’t quote ‘append’.
⛔ Warning (comp): browse-kill-ring.el:301:14: Warning: Case 'prepend will match ‘quote’.  If that’s intended, write (prepend quote) instead.  Otherwise, don’t quote ‘prepend’.
⛔ Warning (comp): browse-kill-ring.el:306:14: Warning: Case 'move will match ‘quote’.  If that’s intended, write (move quote) instead.  Otherwise, don’t quote ‘move’.
⛔ Warning (comp): browse-kill-ring.el:306:14: Warning: Case 'delete will match ‘quote’.  If that’s intended, write (delete quote) instead.  Otherwise, don’t quote ‘delete’.
⛔ Warning (comp): browse-kill-ring.el:390:14: Warning: Case 'solid will match ‘quote’.  If that’s intended, write (solid quote) instead.  Otherwise, don’t quote ‘solid’.
⛔ Warning (comp): browse-kill-ring.el:267:14: Warning: the function ‘browse-kill-ring-fit-window’ is not known to be defined.
⛔ Warning (comp): org2blog.el:306:18: Warning: ‘format’ called with 1 args to fill 0 format field(s)
⛔ Warning (comp): org2blog.el:342:10: Warning: Unused lexical variable `org-export-show-temporary-export-buffer'
⛔ Warning (comp): htmlize.el:289:2: Warning: defvar `htmlize-face-overrides' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
⛔ Warning (comp): htmlize.el:1797:10: Warning: Unused lexical variable `font-lock-maximum-size'
⛔ Warning (comp): org2blog.el:2210:33: Warning: reference to free variable ‘org2blog--error’
⛔ Warning (comp): org2blog.el:344:6: Warning: the function ‘org-ascii-export-as-ascii’ might not be defined at runtime.
⛔ Warning (comp): xml-rpc.el:188:11: Warning: defsubst ‘xml-rpc-valuep’ was used before it was defined
⛔ Warning (comp): writegood-mode.el:273:2: Warning: docstring wider than 80 characters
⛔ Warning (comp): writegood-mode.el:324:2: Warning: docstring wider than 80 characters
⛔ Warning (comp): ox-wp.el:111:2: Warning: docstring wider than 80 characters
⛔ Warning (comp): fringe-helper.el:100:2: Warning: Package cl is deprecated
⛔ Warning (comp): fringe-helper.el:138:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
⛔ Warning (comp): fringe-helper.el:153:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
⛔ Warning (comp): fringe-helper.el:168:19: Warning: ‘point-at-bol’ is an obsolete function (as of 29.1); use ‘line-beginning-position’ or ‘pos-bol’ instead.
⛔ Warning (comp): fringe-helper.el:174:21: Warning: ‘point-at-bol’ is an obsolete function (as of 29.1); use ‘line-beginning-position’ or ‘pos-bol’ instead.
⛔ Warning (comp): fringe-helper.el:227:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
⛔ Warning (comp): git-gutter.el:51:2: Warning: custom-declare-variable `git-gutter:diff-option' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
⛔ Warning (comp): git-gutter.el:56:2: Warning: custom-declare-variable `git-gutter:subversion-diff-option' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
⛔ Warning (comp): git-gutter.el:61:2: Warning: custom-declare-variable `git-gutter:mercurial-diff-option' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
⛔ Warning (comp): git-gutter.el:66:2: Warning: custom-declare-variable `git-gutter:bazaar-diff-option' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
⛔ Warning (comp): git-gutter.el:852:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
#+end_src

上記のWarningはとりあえず無視します。
